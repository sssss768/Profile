{"version":3,"file":"arrays.js","sources":["../../../../packages/utils/arrays.ts"],"sourcesContent":["export const unique = <T>(arr: T[]) => [...new Set(arr)]\n\ntype Many<T> = T | ReadonlyArray<T>\n// TODO: rename to `ensureArray`\n/** like `_.castArray`, except falsy value returns empty array. */\nexport const castArray = <T>(arr: Many<T>): T[] => {\n  if (!arr && (arr as any) !== 0) return []\n  return Array.isArray(arr) ? arr : ([arr] as any)\n}\n\n// TODO: remove import alias\n// avoid naming conflicts\nexport { castArray as ensureArray } from 'lodash-unified'\n\n// export const getJsVarName = (_var: unknown): string => Object.keys({ _var })[0]\n"],"names":[],"mappings":";;;;;;AAAa,MAAA,MAAA,GAAS,CAAI,GAAa,KAAA,CAAC,GAAG,IAAI,GAAA,CAAI,GAAG,CAAC,EAAA;AAK1C,MAAA,SAAA,GAAY,CAAI,GAAsB,KAAA;AACjD,EAAI,IAAA,CAAC,OAAQ,GAAgB,KAAA,CAAA;AAAG,IAAA,OAAO,EAAC,CAAA;AACxC,EAAA,OAAO,MAAM,OAAQ,CAAA,GAAG,CAAI,GAAA,GAAA,GAAO,CAAC,GAAG,CAAA,CAAA;AACzC;;;;;;;;;"}