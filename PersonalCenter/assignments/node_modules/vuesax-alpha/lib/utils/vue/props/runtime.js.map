{"version":3,"file":"runtime.js","sources":["../../../../../../packages/utils/vue/props/runtime.ts"],"sourcesContent":["import { warn } from 'vue'\nimport { fromPairs } from 'lodash-unified'\nimport { isObject } from '../../types'\nimport { hasOwn } from '../../objects'\n\nimport type { PropType } from 'vue'\nimport type {\n  IfNativePropType,\n  IfVsProp,\n  NativePropType,\n  VsProp,\n  VsPropConvert,\n  VsPropFinalized,\n  VsPropInput,\n  VsPropMergeType,\n} from './types'\n\nexport const vsPropKey = '__vsPropKey'\n\nexport const definePropType = <T>(val: any): PropType<T> => val\n\nexport const isVsProp = (val: unknown): val is VsProp<any, any, any> =>\n  isObject(val) && !!(val as any)[vsPropKey]\n\n/**\n * @description Build prop. It can better optimize prop types\n * @example\n  // limited options\n  // the type will be PropType<'light' | 'dark'>\n  buildProp({\n    type: String,\n    values: ['light', 'dark'],\n  } as const)\n  * @example\n  // limited options and other types\n  // the type will be PropType<'small' | 'large' | number>\n  buildProp({\n    type: [String, Number],\n    values: ['small', 'large'],\n    validator: (val: unknown): val is number => typeof val === 'number',\n  } as const)\n  @link see more: https://github.com/vuesax-alphax/vuesax-alpha/pull/3341\n */\nexport const buildProp = <\n  Type = never,\n  Value = never,\n  Validator = never,\n  Default extends VsPropMergeType<Type, Value, Validator> = never,\n  Required extends boolean = false\n>(\n  prop: VsPropInput<Type, Value, Validator, Default, Required>,\n  key?: string\n): VsPropFinalized<Type, Value, Validator, Default, Required> => {\n  // filter native prop type and nested prop, e.g `null`, `undefined` (from `buildProps`)\n  if (!isObject(prop) || isVsProp(prop)) return prop as any\n\n  const { values, required, default: defaultValue, type, validator } = prop\n\n  const _validator =\n    values || validator\n      ? (val: unknown) => {\n          let valid = false\n          let allowedValues: unknown[] = []\n\n          if (values) {\n            allowedValues = Array.from(values)\n            if (hasOwn(prop, 'default')) {\n              allowedValues.push(defaultValue)\n            }\n            valid ||= allowedValues.includes(val)\n          }\n          if (validator) valid ||= validator(val)\n\n          if (!valid && allowedValues.length > 0) {\n            const allowValuesText = [...new Set(allowedValues)]\n              .map((value) => JSON.stringify(value))\n              .join(', ')\n            warn(\n              `Invalid prop: validation failed${\n                key ? ` for prop \"${key}\"` : ''\n              }. Expected one of [${allowValuesText}], got value ${JSON.stringify(\n                val\n              )}.`\n            )\n          }\n          return valid\n        }\n      : undefined\n\n  const vsProp: any = {\n    type,\n    required: !!required,\n    validator: _validator,\n    [vsPropKey]: true,\n  }\n  if (hasOwn(prop, 'default')) vsProp.default = defaultValue\n  return vsProp\n}\n\nexport const buildProps = <\n  Props extends Record<\n    string,\n    | { [vsPropKey]: true }\n    | NativePropType\n    | VsPropInput<any, any, any, any, any>\n  >\n>(\n  props: Props\n): {\n  [K in keyof Props]: IfVsProp<\n    Props[K],\n    Props[K],\n    IfNativePropType<Props[K], Props[K], VsPropConvert<Props[K]>>\n  >\n} =>\n  fromPairs(\n    Object.entries(props).map(([key, option]) => [\n      key,\n      buildProp(option as any, key),\n    ])\n  ) as any\n"],"names":["isObject","hasOwn","warn","fromPairs"],"mappings":";;;;;;;;;;AAiBO,MAAM,SAAY,GAAA,cAAA;AAEZ,MAAA,cAAA,GAAiB,CAAI,GAA0B,KAAA,IAAA;AAE/C,MAAA,QAAA,GAAW,CAAC,GACvB,KAAAA,eAAA,CAAS,GAAG,CAAK,IAAA,CAAC,CAAE,GAAY,CAAA,SAAA,EAAA;AAqBrB,MAAA,SAAA,GAAY,CAOvB,IAAA,EACA,GAC+D,KAAA;AAE/D,EAAA,IAAI,CAACA,eAAA,CAAS,IAAI,CAAA,IAAK,SAAS,IAAI,CAAA;AAAG,IAAO,OAAA,IAAA,CAAA;AAE9C,EAAA,MAAM,EAAE,MAAQ,EAAA,QAAA,EAAU,SAAS,YAAc,EAAA,IAAA,EAAM,WAAc,GAAA,IAAA,CAAA;AAErE,EAAA,MAAM,UACJ,GAAA,MAAA,IAAU,SACN,GAAA,CAAC,GAAiB,KAAA;AAChB,IAAA,IAAI,KAAQ,GAAA,KAAA,CAAA;AACZ,IAAA,IAAI,gBAA2B,EAAC,CAAA;AAEhC,IAAA,IAAI,MAAQ,EAAA;AACV,MAAgB,aAAA,GAAA,KAAA,CAAM,KAAK,MAAM,CAAA,CAAA;AACjC,MAAI,IAAAC,aAAA,CAAO,IAAM,EAAA,SAAS,CAAG,EAAA;AAC3B,QAAA,aAAA,CAAc,KAAK,YAAY,CAAA,CAAA;AAAA,OACjC;AACA,MAAU,KAAA,KAAA,KAAA,GAAA,aAAA,CAAc,SAAS,GAAG,CAAA,CAAA,CAAA;AAAA,KACtC;AACA,IAAI,IAAA,SAAA;AAAW,MAAA,KAAA,KAAA,KAAA,GAAU,UAAU,GAAG,CAAA,CAAA,CAAA;AAEtC,IAAA,IAAI,CAAC,KAAA,IAAS,aAAc,CAAA,MAAA,GAAS,CAAG,EAAA;AACtC,MAAA,MAAM,kBAAkB,CAAC,GAAG,IAAI,GAAA,CAAI,aAAa,CAAC,CAAA,CAC/C,GAAI,CAAA,CAAC,UAAU,IAAK,CAAA,SAAA,CAAU,KAAK,CAAC,CAAA,CACpC,KAAK,IAAI,CAAA,CAAA;AACZ,MAAAC,QAAA;AAAA,QACE,kCACE,GAAM,GAAA,CAAA,WAAA,EAAc,GAAS,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,mBAAA,EACT,+BAA+B,IAAK,CAAA,SAAA;AAAA,UACxD,GAAA;AAAA,SACF,CAAA,CAAA,CAAA;AAAA,OACF,CAAA;AAAA,KACF;AACA,IAAO,OAAA,KAAA,CAAA;AAAA,GAET,GAAA,KAAA,CAAA,CAAA;AAEN,EAAA,MAAM,MAAc,GAAA;AAAA,IAClB,IAAA;AAAA,IACA,QAAA,EAAU,CAAC,CAAC,QAAA;AAAA,IACZ,SAAW,EAAA,UAAA;AAAA,IACX,CAAC,SAAY,GAAA,IAAA;AAAA,GACf,CAAA;AACA,EAAI,IAAAD,aAAA,CAAO,MAAM,SAAS,CAAA;AAAG,IAAA,MAAA,CAAO,OAAU,GAAA,YAAA,CAAA;AAC9C,EAAO,OAAA,MAAA,CAAA;AACT,EAAA;AAEa,MAAA,UAAA,GAAa,CAQxB,KAQA,KAAAE,uBAAA;AAAA,EACE,MAAA,CAAO,QAAQ,KAAK,CAAA,CAAE,IAAI,CAAC,CAAC,GAAK,EAAA,MAAM,CAAM,KAAA;AAAA,IAC3C,GAAA;AAAA,IACA,SAAA,CAAU,QAAe,GAAG,CAAA;AAAA,GAC7B,CAAA;AACH;;;;;;;;"}