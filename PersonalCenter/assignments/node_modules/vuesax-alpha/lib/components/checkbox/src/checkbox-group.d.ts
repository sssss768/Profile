import type { ExtractPropTypes } from 'vue';
import type { CheckboxValueType } from './checkbox';
import type CheckboxGroup from './checkbox-group.vue';
export declare type CheckboxGroupValueType = CheckboxValueType[];
export declare const checkboxGroupProps: {
    readonly modelValue: import("vuesax-alpha/es/utils").VsPropFinalized<(new (...args: any[]) => CheckboxGroupValueType) | (() => CheckboxGroupValueType) | ((new (...args: any[]) => CheckboxGroupValueType) | (() => CheckboxGroupValueType))[], unknown, unknown, () => never[], boolean>;
    readonly disabled: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
    readonly min: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly max: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
};
export declare type CheckboxGroupProps = ExtractPropTypes<typeof checkboxGroupProps>;
export declare type CheckboxGroupInstance = InstanceType<typeof CheckboxGroup>;
export declare const checkboxGroupEmits: {
    "update:modelValue": (val: CheckboxGroupValueType) => boolean;
    change: (val: CheckboxGroupValueType) => boolean;
};
export declare type CheckboxGroupEmits = typeof checkboxGroupEmits;
