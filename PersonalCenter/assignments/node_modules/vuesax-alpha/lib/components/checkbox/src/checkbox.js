'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../../../hooks/index.js');
require('../../../constants/index.js');
require('../../../utils/index.js');
var runtime = require('../../../utils/vue/props/runtime.js');
var index = require('../../../hooks/use-common-props/index.js');
var event = require('../../../constants/event.js');
var shared = require('@vue/shared');
var types = require('../../../utils/types.js');

const checkboxProps = runtime.buildProps({
  color: index.useColorProp,
  modelValue: {
    type: runtime.definePropType([
      String,
      Number,
      Boolean,
      Object,
      Array
    ]),
    default: void 0
  },
  notValue: {
    type: runtime.definePropType([
      String,
      Number,
      Boolean,
      Object,
      Array
    ])
  },
  value: {
    type: runtime.definePropType([
      String,
      Number,
      Boolean,
      Object,
      Array
    ])
  },
  id: {
    type: String,
    default: null
  },
  indeterminate: {
    type: Boolean
  },
  checked: {
    type: Boolean
  },
  checkedForce: {
    type: Boolean
  },
  disabled: {
    type: Boolean
  },
  loading: {
    type: Boolean
  },
  label: {
    type: String
  },
  labelBefore: {
    type: Boolean
  },
  lineThrough: {
    type: Boolean
  },
  name: {
    type: String,
    default: void 0
  },
  min: {
    type: Number
  },
  max: {
    type: Number
  }
});
const checkboxEmits = {
  [event.UPDATE_MODEL_EVENT]: (val) => shared.isString(val) || types.isNumber(val) || types.isBoolean(val) || shared.isArray(val),
  change: (val) => shared.isString(val) || types.isNumber(val) || types.isBoolean(val)
};

exports.checkboxEmits = checkboxEmits;
exports.checkboxProps = checkboxProps;
//# sourceMappingURL=checkbox.js.map
