'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var iconsVue = require('@vuesax-alpha/icons-vue');
require('../../../utils/index.js');
require('../../popper/index.js');
require('../../../hooks/index.js');
require('../../button/index.js');
require('../../tooltip/index.js');
var runtime = require('../../../utils/vue/props/runtime.js');
var tooltip = require('../../tooltip/src/tooltip.js');
var index = require('../../../hooks/use-common-props/index.js');
var button = require('../../button/src/button.js');
var icon = require('../../../utils/vue/icon.js');
var content = require('../../popper/src/content.js');

const popconfirmProps = runtime.buildProps({
  animation: tooltip.tooltipProps.animation,
  title: { type: String },
  confirmButtonText: { type: String },
  cancelButtonText: { type: String },
  confirmButtonColor: {
    ...index.useColorProp,
    default: "primary"
  },
  confirmButtonType: {
    type: String,
    values: button.buttonTypes,
    default: "flat"
  },
  confirmButtonSize: {
    type: String,
    values: button.buttonSizes,
    default: "small"
  },
  cancelButtonColor: {
    ...index.useColorProp,
    default: "text"
  },
  cancelButtonType: {
    type: String,
    values: button.buttonTypes,
    default: "transparent"
  },
  cancelButtonSize: {
    type: String,
    values: button.buttonSizes,
    default: "small"
  },
  icon: {
    type: icon.iconPropType,
    default: () => iconsVue.MessageQuestion
  },
  iconColor: {
    type: String,
    default: "#f90"
  },
  hideIcon: {
    type: Boolean,
    default: false
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  teleported: content.popperContentProps.teleported,
  persistent: content.popperContentProps.persistent,
  width: {
    type: [String, Number],
    default: 200
  }
});
const popconfirmEmits = {
  confirm: (e) => e instanceof MouseEvent,
  cancel: (e) => e instanceof MouseEvent
};

exports.popconfirmEmits = popconfirmEmits;
exports.popconfirmProps = popconfirmProps;
//# sourceMappingURL=popconfirm.js.map
