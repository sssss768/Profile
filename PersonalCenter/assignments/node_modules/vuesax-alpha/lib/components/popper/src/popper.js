'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../../../utils/index.js');
require('../../../hooks/index.js');
var content = require('./content.js');
var trigger = require('./trigger.js');
var index = require('../../../hooks/use-model-toggle/index.js');
var runtime = require('../../../utils/vue/props/runtime.js');
var index$1 = require('../../../hooks/use-delayed-toggle/index.js');

const {
  useModelToggleProps: usePopperModelToggleProps,
  useModelToggleEmits: usePopperModelToggleEmits,
  useModelToggle: usePopperModelToggle
} = index.createModelToggleComposable("visible");
const popperProps = runtime.buildProps({
  ...index$1.useDelayedToggleProps,
  ...content.popperContentProps,
  ...trigger.popperTriggerProps,
  ...usePopperModelToggleProps,
  processBeforeOpen: {
    type: runtime.definePropType(Function),
    default: () => true
  },
  processBeforeClose: {
    type: runtime.definePropType(Function),
    default: () => true
  },
  showArrow: {
    type: Boolean,
    default: true
  },
  loading: {
    type: Boolean
  }
});
const popperEmits = [
  ...usePopperModelToggleEmits,
  "before-show",
  "show",
  "before-hide",
  "hide"
];

exports.popperEmits = popperEmits;
exports.popperProps = popperProps;
exports.usePopperModelToggle = usePopperModelToggle;
exports.usePopperModelToggleEmits = usePopperModelToggleEmits;
exports.usePopperModelToggleProps = usePopperModelToggleProps;
//# sourceMappingURL=popper.js.map
