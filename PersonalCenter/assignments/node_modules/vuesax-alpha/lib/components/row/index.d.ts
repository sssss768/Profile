export declare const VsRow: import("vuesax-alpha/es/utils").SFCWithInstall<import("vue").DefineComponent<{
    gutter: import("vuesax-alpha/es/utils").VsPropFinalized<NumberConstructor, unknown, unknown, number, boolean>;
    justify: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "space-around" | "space-between" | "space-evenly" | "center" | "end" | "start", unknown, string, boolean>;
    direction: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "column" | "column-reverse" | "row" | "row-reverse", unknown, string, boolean>;
    align: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "top" | "bottom" | "middle", unknown, string, boolean>;
}, {
    props: import("@vue/shared").LooseRequired<{
        readonly direction: import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "column" | "column-reverse" | "row" | "row-reverse", unknown>;
        readonly justify: import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "space-around" | "space-between" | "space-evenly" | "center" | "end" | "start", unknown>;
        readonly gutter: number;
        readonly align: import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "top" | "bottom" | "middle", unknown>;
    } & {}>;
    ns: {
        namespace: import("vue").ComputedRef<string>;
        b: (blockSuffix?: string) => string;
        e: (element?: string | undefined) => string;
        m: (modifier?: string | undefined) => string;
        be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
        em: (element?: string | undefined, modifier?: string | undefined) => string;
        bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
        bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
        is: {
            (name: string, state: boolean | undefined): string;
            (name: string): string;
        };
        cssVar: (object: Record<string, string>) => Record<string, string>;
        cssVarName: (name: string) => string;
        cssVarBlock: (object: Record<string, string>) => Record<string, string>;
        cssVarBlockName: (name: string) => string;
    };
    gutter: import("vue").ComputedRef<number>;
    style: import("vue").ComputedRef<import("vue").CSSProperties>;
    rowKls: import("vue").ComputedRef<string[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    gutter: import("vuesax-alpha/es/utils").VsPropFinalized<NumberConstructor, unknown, unknown, number, boolean>;
    justify: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "space-around" | "space-between" | "space-evenly" | "center" | "end" | "start", unknown, string, boolean>;
    direction: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "column" | "column-reverse" | "row" | "row-reverse", unknown, string, boolean>;
    align: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "top" | "bottom" | "middle", unknown, string, boolean>;
}>>, {
    direction: import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "column" | "column-reverse" | "row" | "row-reverse", unknown>;
    justify: import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "space-around" | "space-between" | "space-evenly" | "center" | "end" | "start", unknown>;
    gutter: number;
    align: import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "top" | "bottom" | "middle", unknown>;
}, {}>> & Record<string, any>;
export default VsRow;
export * from './src/row';
