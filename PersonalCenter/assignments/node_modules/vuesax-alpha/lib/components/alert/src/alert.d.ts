import type { ExtractPropTypes } from 'vue';
import type Alert from './alert.vue';
export declare const alertProps: {
    readonly color: {
        readonly default: "primary";
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "primary" | "success" | "danger" | "warn" | "dark" | "text" | "light" | "secondary" | "facebook" | "twitter" | "youtube" | "pinterest" | "linkedin" | "snapchat" | "whatsapp" | "tumblr" | "reddit" | "spotify" | "amazon" | "medium" | "vimeo" | "skype" | "dribbble" | "slack" | "yahoo" | "twitch" | "discord" | "telegram" | "google-plus" | "messenger", import("vuesax-alpha/es/constants").Color>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        readonly __vsPropKey: true;
    };
    readonly closable: {
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<BooleanConstructor, unknown, unknown>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly hiddenContent: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, null, boolean>;
    readonly modelValue: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, true, boolean>;
    readonly page: import("vuesax-alpha/es/utils").VsPropFinalized<NumberConstructor, unknown, unknown, 0, boolean>;
    readonly progress: import("vuesax-alpha/es/utils").VsPropFinalized<readonly [NumberConstructor, StringConstructor], unknown, unknown, 0, boolean>;
    readonly time: import("vuesax-alpha/es/utils").VsPropFinalized<readonly [NumberConstructor, StringConstructor], unknown, unknown, 0, boolean>;
    readonly type: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "" | "border" | "flat" | "gradient" | "relief" | "shadow" | "solid", unknown, "", boolean>;
    readonly border: BooleanConstructor;
    readonly flat: BooleanConstructor;
    readonly gradient: BooleanConstructor;
    readonly relief: BooleanConstructor;
    readonly shadow: BooleanConstructor;
    readonly solid: BooleanConstructor;
};
export declare type AlertProps = ExtractPropTypes<typeof alertProps>;
export declare const alertEmits: {
    "update:modelValue": (value: boolean) => boolean;
    'update:page': (value: number) => boolean;
    'update:hiddenContent': (value: boolean) => boolean;
};
export declare type AlertEmits = typeof alertEmits;
export declare type AlertInstance = InstanceType<typeof Alert>;
