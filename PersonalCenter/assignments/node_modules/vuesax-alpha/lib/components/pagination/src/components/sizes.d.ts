import type { EmitFn } from 'vuesax-alpha/es/utils';
import type { ExtractPropTypes } from 'vue';
import type Sizes from './sizes.vue';
export declare const paginationSizesProps: {
    readonly pageSize: {
        readonly type: import("vue").PropType<number>;
        readonly required: true;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly pageSizes: import("vuesax-alpha/es/utils").VsPropFinalized<(new (...args: any[]) => number[]) | (() => number[]) | ((new (...args: any[]) => number[]) | (() => number[]))[], unknown, unknown, () => [10, 20, 30, 40, 50, 100], boolean>;
};
export declare type PaginationSizesProps = ExtractPropTypes<typeof paginationSizesProps>;
export declare const paginationSizesEmits: {
    'page-size-change': (val: number) => boolean;
};
export declare type PaginationSizesEmits = typeof paginationSizesEmits;
export declare type paginationSizesEmitsFn = EmitFn<PaginationSizesEmits>;
export declare type SizesInstance = InstanceType<typeof Sizes>;
