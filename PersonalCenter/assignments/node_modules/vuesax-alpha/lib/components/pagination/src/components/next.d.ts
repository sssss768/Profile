import type { ExtractPropType } from 'vuesax-alpha/es/utils';
import type Next from './next.vue';
export declare const paginationNextProps: {
    readonly nextText: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, unknown, unknown, "", boolean>;
    readonly nextIcon: {
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<(new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) | ((new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>))[], unknown, unknown>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
};
export declare type NextProps = ExtractPropType<typeof paginationNextProps>;
export declare type NextInstance = InstanceType<typeof Next>;
