'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../../../utils/index.js');
require('../../../hooks/index.js');
var runtime = require('../../../utils/vue/props/runtime.js');
var index = require('../../../hooks/use-common-props/index.js');
var icon = require('../../../utils/vue/icon.js');
var types = require('../../../utils/types.js');

const notificationPosition = [
  "top-right",
  "top-center",
  "top-left",
  "bottom-right",
  "bottom-center",
  "bottom-left"
];
const notificationProps = runtime.buildProps({
  border: index.useColorProp,
  color: index.useColorProp,
  customClass: {
    type: String,
    default: ""
  },
  duration: {
    type: Number,
    default: 4500
  },
  flat: { type: Boolean },
  icon: {
    type: icon.iconPropType
  },
  iconSize: {
    type: String,
    default: "1.2rem"
  },
  id: {
    type: String,
    default: ""
  },
  dangerousHtmlString: {
    type: Boolean,
    default: false
  },
  content: {
    type: runtime.definePropType([String, Object]),
    default: ""
  },
  loading: Boolean,
  notPadding: Boolean,
  offset: {
    type: Number,
    default: 0
  },
  onClick: {
    type: runtime.definePropType(Function),
    default: () => void 0
  },
  onClickClose: {
    type: runtime.definePropType(Function),
    default: () => true
  },
  onClose: {
    type: runtime.definePropType(Function),
    default: () => void 0
  },
  position: {
    type: runtime.definePropType(String),
    values: notificationPosition,
    default: "bottom-right"
  },
  progressAuto: { type: Boolean },
  shape: {
    type: String,
    values: ["square", ""],
    default: ""
  },
  showClose: {
    type: Boolean,
    default: true
  },
  sticky: { type: Boolean },
  title: {
    type: String,
    default: ""
  },
  zIndex: { type: Number },
  width: {
    type: runtime.definePropType([String, Number]),
    validator: (prop) => ["auto", "full"].includes(prop) || types.isNumber(prop) || types.isStringNumber(prop),
    default: null
  }
});
const notificationEmits = {
  destroy: () => true
};

exports.notificationEmits = notificationEmits;
exports.notificationPosition = notificationPosition;
exports.notificationProps = notificationProps;
//# sourceMappingURL=notification.js.map
