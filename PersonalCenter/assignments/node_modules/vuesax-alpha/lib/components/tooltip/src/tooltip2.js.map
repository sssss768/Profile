{"version":3,"file":"tooltip2.js","sources":["../../../../../../packages/components/tooltip/src/tooltip.vue"],"sourcesContent":["<template>\n  <vs-popper\n    ref=\"popperRef\"\n    :interactivity=\"interactivity\"\n    :popper-class=\"[tooltipKls, popperClass ?? '']\"\n    :popper-style=\"[popperStyle ?? '', tooltipStyle]\"\n    :animation=\"animation\"\n    :append-to=\"appendTo\"\n    :flip=\"flip\"\n    :shift=\"shift\"\n    :window-resize=\"windowResize\"\n    :window-scroll=\"windowScroll\"\n    :disabled=\"disabled\"\n    :fit=\"fit\"\n    :loading=\"loading\"\n    :hide-after=\"hideAfter\"\n    :offset=\"offset\"\n    :placement=\"placement\"\n    :show-after=\"showAfter\"\n    :show-arrow=\"showArrow\"\n    :strategy=\"strategy\"\n    :teleported=\"teleported\"\n    :trigger=\"trigger\"\n    :trigger-class=\"triggerClass\"\n    :trigger-style=\"triggerStyle\"\n    :virtual-ref=\"virtualRef\"\n    :virtual-triggering=\"virtualTriggering\"\n    :z-index=\"zIndex\"\n    :on-blur=\"onBlur\"\n    :on-click=\"onClick\"\n    :on-focus=\"onFocus\"\n    :on-keydown=\"onKeydown\"\n    :on-contextmenu=\"onContextmenu\"\n    :on-mouseenter=\"onMouseenter\"\n    :on-mouseleave=\"onMouseleave\"\n  >\n    <slot />\n\n    <template #content>\n      <slot name=\"content\" />\n    </template>\n  </vs-popper>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport {\n  useColor,\n  useNamespace,\n  useVuesaxBaseComponent,\n} from '@vuesax-alpha/hooks'\nimport VsPopper from '@vuesax-alpha/components/popper'\nimport { getVsColor } from '@vuesax-alpha/utils'\nimport { tooltipProps } from './tooltip'\nimport { useTooltipDeprecated } from './useTooltipDeprecated'\nimport type { PopperExpose } from '@vuesax-alpha/components/popper'\n\ndefineOptions({\n  name: 'VsTooltip',\n})\n\nconst ns = useNamespace('tooltip')\n\nconst popperRef = ref<PopperExpose>()\n\nconst props = defineProps(tooltipProps)\n\nconst tooltipStyle = computed(() => [\n  ns.cssVar({\n    color: getVsColor(props.color),\n  }),\n])\nconst vsBaseClasses = useVuesaxBaseComponent(useColor())\nconst tooltipKls = computed(() => [\n  ns.b(),\n  vsBaseClasses,\n  ns.is('loading', props.loading),\n  ns.is(props.type, !!props.type),\n  ns.is(props.shape, !!props.shape),\n  ns.is('not-arrow', !props.showArrow),\n  ns.is(props.effect),\n])\n\nuseTooltipDeprecated(props)\n\ndefineExpose({ popperRef })\n</script>\n"],"names":["useNamespace","ref","computed","getVsColor","useVuesaxBaseComponent","useColor","useTooltipDeprecated"],"mappings":";;;;;;;;;;;;;;;;uCAyDc,CAAA;AAAA,EACZ,IAAM,EAAA,WAAA;AACR,CAAA,CAAA,CAAA;;;;;;AAEM,IAAA,MAAA,EAAA,GAAKA,mBAAa,SAAS,CAAA,CAAA;AAEjC,IAAA,MAAM,YAAYC,OAAkB,EAAA,CAAA;AAI9B,IAAA,MAAA,YAAA,GAAeC,aAAS,MAAM;AAAA,MAClC,GAAG,MAAO,CAAA;AAAA,QACR,KAAA,EAAOC,gBAAW,CAAA,KAAA,CAAM,KAAK,CAAA;AAAA,OAC9B,CAAA;AAAA,KACF,CAAA,CAAA;AACK,IAAA,MAAA,aAAA,GAAgBC,8BAAuB,CAAAC,gBAAA,EAAU,CAAA,CAAA;AACjD,IAAA,MAAA,UAAA,GAAaH,aAAS,MAAM;AAAA,MAChC,GAAG,CAAE,EAAA;AAAA,MACL,aAAA;AAAA,MACA,EAAG,CAAA,EAAA,CAAG,SAAW,EAAA,KAAA,CAAM,OAAO,CAAA;AAAA,MAC9B,GAAG,EAAG,CAAA,KAAA,CAAM,MAAM,CAAC,CAAC,MAAM,IAAI,CAAA;AAAA,MAC9B,GAAG,EAAG,CAAA,KAAA,CAAM,OAAO,CAAC,CAAC,MAAM,KAAK,CAAA;AAAA,MAChC,EAAG,CAAA,EAAA,CAAG,WAAa,EAAA,CAAC,MAAM,SAAS,CAAA;AAAA,MACnC,EAAA,CAAG,EAAG,CAAA,KAAA,CAAM,MAAM,CAAA;AAAA,KACnB,CAAA,CAAA;AAED,IAAAI,yCAAA,CAAqB,KAAK,CAAA,CAAA;AAEb,IAAA,QAAA,CAAA,EAAE,WAAW,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}