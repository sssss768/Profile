{"version":3,"file":"scrollbar2.js","sources":["../../../../../../packages/components/scrollbar/src/scrollbar.vue"],"sourcesContent":["<template>\n  <div ref=\"scrollbarRef\" :class=\"ns.b()\">\n    <div ref=\"wrapRef\" :class=\"wrapKls\" :style=\"style\" @scroll=\"handleScroll\">\n      <component\n        :is=\"tag\"\n        ref=\"resizeRef\"\n        :class=\"resizeKls\"\n        :style=\"viewStyle\"\n      >\n        <slot />\n      </component>\n    </div>\n    <template v-if=\"!native\">\n      <bar\n        ref=\"barRef\"\n        :height=\"sizeHeight\"\n        :width=\"sizeWidth\"\n        :always=\"always\"\n        :ratio-x=\"ratioX\"\n        :ratio-y=\"ratioY\"\n        :thickness=\"thickness\"\n      />\n    </template>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  onUpdated,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { useEventListener, useResizeObserver } from '@vueuse/core'\nimport { addUnit, debugWarn, isNumber, isObject } from '@vuesax-alpha/utils'\nimport { scrollbarContextKey } from '@vuesax-alpha/tokens'\nimport { useNamespace } from '@vuesax-alpha/hooks'\nimport { GAP } from './util'\nimport Bar from './bar.vue'\nimport { scrollbarEmits, scrollbarProps } from './scrollbar'\nimport type { BarInstance } from './bar'\nimport type { CSSProperties, StyleValue } from 'vue'\n\nconst COMPONENT_NAME = 'VsScrollbar'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(scrollbarProps)\nconst emit = defineEmits(scrollbarEmits)\n\nconst ns = useNamespace('scrollbar')\n\nlet stopResizeObserver: (() => void) | undefined = undefined\nlet stopResizeListener: (() => void) | undefined = undefined\n\nconst scrollbarRef = ref<HTMLDivElement>()\nconst wrapRef = ref<HTMLDivElement>()\nconst resizeRef = ref<HTMLElement>()\n\nconst sizeWidth = ref('0')\nconst sizeHeight = ref('0')\nconst barRef = ref<BarInstance>()\nconst ratioY = ref(1)\nconst ratioX = ref(1)\n\nconst style = computed<StyleValue>(() => {\n  const style: CSSProperties = {}\n  if (props.height) style.height = addUnit(props.height)\n  if (props.maxHeight) style.maxHeight = addUnit(props.maxHeight)\n  return [props.wrapStyle, style]\n})\n\nconst wrapKls = computed(() => {\n  return [\n    props.wrapClass,\n    ns.e('wrap'),\n    { [ns.em('wrap', 'hidden-default')]: !props.native },\n  ]\n})\n\nconst resizeKls = computed(() => {\n  return [ns.e('view'), props.viewClass]\n})\n\nconst handleScroll = () => {\n  if (wrapRef.value) {\n    barRef.value?.handleScroll(wrapRef.value)\n\n    emit('scroll', {\n      scrollTop: wrapRef.value.scrollTop,\n      scrollLeft: wrapRef.value.scrollLeft,\n    })\n  }\n}\n\n// TODO: refactor method overrides, due to script setup dts\n// @ts-nocheck\nfunction scrollTo(xCord: number, yCord?: number): void\nfunction scrollTo(options: ScrollToOptions): void\nfunction scrollTo(arg1: unknown, arg2?: number) {\n  if (isObject(arg1)) {\n    wrapRef.value!.scrollTo(arg1)\n  } else if (isNumber(arg1) && isNumber(arg2)) {\n    wrapRef.value!.scrollTo(arg1, arg2)\n  }\n}\n\nconst setScrollTop = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollTop = value\n}\n\nconst setScrollLeft = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollLeft = value\n}\n\nconst update = () => {\n  if (!wrapRef.value) return\n  const offsetHeight = wrapRef.value.offsetHeight - GAP\n  const offsetWidth = wrapRef.value.offsetWidth - GAP\n\n  const originalHeight = offsetHeight ** 2 / wrapRef.value.scrollHeight\n  const originalWidth = offsetWidth ** 2 / wrapRef.value.scrollWidth\n  const height = Math.max(originalHeight, props.minSize)\n  const width = Math.max(originalWidth, props.minSize)\n\n  ratioY.value =\n    originalHeight /\n    (offsetHeight - originalHeight) /\n    (height / (offsetHeight - height))\n  ratioX.value =\n    originalWidth /\n    (offsetWidth - originalWidth) /\n    (width / (offsetWidth - width))\n\n  sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : ''\n  sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : ''\n}\n\nwatch(\n  () => props.noresize,\n  (noresize) => {\n    if (noresize) {\n      stopResizeObserver?.()\n      stopResizeListener?.()\n    } else {\n      ;({ stop: stopResizeObserver } = useResizeObserver(resizeRef, update))\n      stopResizeListener = useEventListener('resize', update)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => [props.maxHeight, props.height],\n  () => {\n    if (!props.native)\n      nextTick(() => {\n        update()\n        if (wrapRef.value) {\n          barRef.value?.handleScroll(wrapRef.value)\n        }\n      })\n  }\n)\n\nprovide(\n  scrollbarContextKey,\n  reactive({\n    scrollbarElement: scrollbarRef,\n    wrapElement: wrapRef,\n  })\n)\n\nonMounted(() => {\n  if (!props.native)\n    nextTick(() => {\n      update()\n    })\n})\n\nonUpdated(() => update())\n\ndefineExpose({\n  /** @description scrollbar wrap ref */\n  wrapRef,\n  /** @description update scrollbar state manually */\n  update,\n  /** @description scrolls to a particular set of coordinates */\n  scrollTo,\n  /** @description set distance to scroll top */\n  setScrollTop,\n  /** @description set distance to scroll left */\n  setScrollLeft,\n  /** @description handle scroll event */\n  handleScroll,\n})\n</script>\n"],"names":["useNamespace","ref","style","computed","addUnit","isObject","isNumber","debugWarn","GAP","watch","useResizeObserver","useEventListener","nextTick","provide","scrollbarContextKey","reactive","onMounted","onUpdated"],"mappings":"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"}