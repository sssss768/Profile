'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defaults = require('./defaults.js');
require('./components/index.js');
require('./constants/index.js');
require('./directives/index.js');
require('./hooks/index.js');
require('./tokens/index.js');
var makeInstaller = require('./make-installer.js');
var dayjs = require('dayjs');
var alert = require('./components/alert/src/alert2.js');
var index = require('./components/alert/index.js');
var avatarGroup = require('./components/avatar/src/avatar-group.js');
var avatar = require('./components/avatar/src/avatar.js');
var index$1 = require('./components/avatar/index.js');
var badge = require('./components/badge/src/badge.js');
var index$2 = require('./components/badge/index.js');
var button = require('./components/button/src/button.js');
var index$3 = require('./components/button/index.js');
var card = require('./components/card/src/card.js');
var index$4 = require('./components/card/index.js');
var checkboxGroup = require('./components/checkbox/src/checkbox-group.js');
var checkbox = require('./components/checkbox/src/checkbox.js');
var index$5 = require('./components/checkbox/index.js');
var col = require('./components/col/src/col.js');
var index$6 = require('./components/col/index.js');
var index$7 = require('./components/collapse-transition/index.js');
var configProvider = require('./components/config-provider/src/config-provider.js');
var index$8 = require('./components/config-provider/index.js');
var dialog = require('./components/dialog/src/dialog.js');
var index$9 = require('./components/dialog/index.js');
var focusTrap = require('./components/focus-trap/src/focus-trap.js');
var index$a = require('./components/focus-trap/index.js');
var icon = require('./components/icon/src/icon.js');
var arrow = require('./components/icon/src/arrow.js');
var check = require('./components/icon/src/check.js');
var close = require('./components/icon/src/close.js');
var plus = require('./components/icon/src/plus.js');
var index$b = require('./components/icon/index.js');
var index$c = require('./components/infinite-scroll/index.js');
var input = require('./components/input/src/input.js');
var index$d = require('./components/input/index.js');
var inputNumber = require('./components/input-number/src/input-number.js');
var index$e = require('./components/input-number/index.js');
var navbarItem = require('./components/navbar/src/navbar-item.js');
var navbar = require('./components/navbar/src/navbar.js');
var index$f = require('./components/navbar/index.js');
var overlay = require('./components/overlay/src/overlay.js');
var index$g = require('./components/overlay/index.js');
var pagination = require('./components/pagination/src/pagination.js');
var index$h = require('./components/pagination/index.js');
var popconfirm = require('./components/popconfirm/src/popconfirm.js');
var index$i = require('./components/popconfirm/index.js');
var popper = require('./components/popper/src/popper.js');
var trigger = require('./components/popper/src/trigger.js');
var content = require('./components/popper/src/content.js');
var index$j = require('./components/popper/index.js');
var radio = require('./components/radio/src/radio.js');
var index$k = require('./components/radio/index.js');
var rate = require('./components/rate/src/rate.js');
var index$l = require('./components/rate/index.js');
var row = require('./components/row/src/row.js');
var index$m = require('./components/row/index.js');
var util = require('./components/scrollbar/src/util.js');
var scrollbar = require('./components/scrollbar/src/scrollbar.js');
var thumb = require('./components/scrollbar/src/thumb.js');
var index$n = require('./components/scrollbar/index.js');
var optionGroup = require('./components/select/src/option-group.js');
var option = require('./components/select/src/option.js');
var select = require('./components/select/src/select.js');
var index$o = require('./components/select/index.js');
var sidebarGroup = require('./components/sidebar/src/sidebar-group.js');
var sidebarItem = require('./components/sidebar/src/sidebar-item.js');
var sidebar = require('./components/sidebar/src/sidebar.js');
var index$p = require('./components/sidebar/index.js');
var onlyChild = require('./components/slot/src/only-child.js');
var _switch = require('./components/switch/src/switch.js');
var index$q = require('./components/switch/index.js');
var table = require('./components/table/src/table2.js');
var utils = require('./components/table/src/utils.js');
var index$r = require('./components/table/index.js');
var timeSelect = require('./components/time-select/src/time-select.js');
var index$s = require('./components/time-select/index.js');
var tooltip = require('./components/tooltip/src/tooltip.js');
var index$t = require('./components/tooltip/index.js');
var loading = require('./components/loading/src/loading.js');
var index$u = require('./components/loading/index.js');
var directive = require('./components/loading/src/directive.js');
var method = require('./components/loading/src/method.js');
var notification = require('./components/notification/src/notification.js');
var index$v = require('./components/notification/index.js');
var aria = require('./constants/aria.js');
var color = require('./constants/color.js');
var cssProperties = require('./constants/css-properties.js');
var event = require('./constants/event.js');
var key = require('./constants/key.js');
var loading$1 = require('./constants/loading.js');
var popper$1 = require('./constants/popper.js');
var size = require('./constants/size.js');
var index$w = require('./directives/click-outside/index.js');
var index$x = require('./directives/loading/index.js');
var index$y = require('./directives/mousewheel/index.js');
var index$z = require('./directives/repeat-click/index.js');
var index$A = require('./directives/trap-focus/index.js');
var index$B = require('./hooks/use-attrs/index.js');
var index$C = require('./hooks/use-base-component/index.js');
var index$D = require('./hooks/use-common-props/index.js');
var index$E = require('./hooks/use-cursor/index.js');
var index$F = require('./hooks/use-delayed-toggle/index.js');
var index$G = require('./hooks/use-deprecated/index.js');
var index$H = require('./hooks/use-draggable/index.js');
var index$I = require('./hooks/use-escape-keydown/index.js');
var arrow$1 = require('./hooks/use-floating/vue/arrow.js');
var useFloating = require('./hooks/use-floating/vue/use-floating.js');
var index$J = require('./hooks/use-floating/dom/index.js');
var detectOverflow = require('./hooks/use-floating/core/detect-overflow.js');
var middleware = require('./hooks/use-floating/dom/middleware.js');
var offset = require('./hooks/use-floating/core/middleware/offset.js');
var platform = require('./hooks/use-floating/dom/platform.js');
var index$K = require('./hooks/use-focus/index.js');
var index$L = require('./hooks/use-forward-ref/index.js');
var index$M = require('./hooks/use-global-config/index.js');
var index$N = require('./hooks/use-group-inject/index.js');
var index$O = require('./hooks/use-group-provide/index.js');
var index$P = require('./hooks/use-id/index.js');
var index$Q = require('./hooks/use-intermediate-render/index.js');
var index$R = require('./hooks/use-locale/index.js');
var index$S = require('./hooks/use-lockscreen/index.js');
var index$T = require('./hooks/use-modal/index.js');
var index$U = require('./hooks/use-model-toggle/index.js');
var index$V = require('./hooks/use-namespace/index.js');
var index$W = require('./hooks/use-ordered-children/index.js');
var index$X = require('./hooks/use-popper-container/index.js');
var index$Y = require('./hooks/use-prevent-global/index.js');
var index$Z = require('./hooks/use-prop/index.js');
var index$_ = require('./hooks/use-restore-active/index.js');
var index$$ = require('./hooks/use-same-target/index.js');
var index$10 = require('./hooks/use-teleport/index.js');
var index$11 = require('./hooks/use-throttle-render/index.js');
var index$12 = require('./hooks/use-timeout/index.js');
var index$13 = require('./hooks/use-transition-fallthrough/index.js');
var index$14 = require('./hooks/use-z-index/index.js');
var avatar$1 = require('./tokens/avatar.js');
var checkbox$1 = require('./tokens/checkbox.js');
var configProvider$1 = require('./tokens/config-provider.js');
var focusTrap$1 = require('./tokens/focus-trap.js');
var pagination$1 = require('./tokens/pagination.js');
var popper$2 = require('./tokens/popper.js');
var row$1 = require('./tokens/row.js');
var scrollbar$1 = require('./tokens/scrollbar.js');
var sidebar$1 = require('./tokens/sidebar.js');
var table$1 = require('./tokens/table.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

const install = defaults["default"].install;
const version = defaults["default"].version;

exports["default"] = defaults["default"];
exports.makeInstaller = makeInstaller.makeInstaller;
Object.defineProperty(exports, 'dayjs', {
	enumerable: true,
	get: function () { return dayjs__default["default"]; }
});
exports.alertEmits = alert.alertEmits;
exports.alertProps = alert.alertProps;
exports.VsAlert = index.VsAlert;
exports.avatarGroupProps = avatarGroup.avatarGroupProps;
exports.avatarProps = avatar.avatarProps;
exports.VsAvatar = index$1.VsAvatar;
exports.VsAvatarGroup = index$1.VsAvatarGroup;
exports.badgeProps = badge.badgeProps;
exports.VsBadge = index$2.VsBadge;
exports.buttonProps = button.buttonProps;
exports.buttonSizes = button.buttonSizes;
exports.buttonTypes = button.buttonTypes;
exports.VsButton = index$3.VsButton;
exports.VsButtonGroup = index$3.VsButtonGroup;
exports.cardProps = card.cardProps;
exports.VsCard = index$4.VsCard;
exports.VsCardGroup = index$4.VsCardGroup;
exports.checkboxGroupEmits = checkboxGroup.checkboxGroupEmits;
exports.checkboxGroupProps = checkboxGroup.checkboxGroupProps;
exports.checkboxEmits = checkbox.checkboxEmits;
exports.checkboxProps = checkbox.checkboxProps;
exports.VsCheckbox = index$5.VsCheckbox;
exports.VsCheckboxGroup = index$5.VsCheckboxGroup;
exports.colProps = col.colProps;
exports.VsCol = index$6.VsCol;
exports.VsCollapseTransition = index$7.VsCollapseTransition;
exports.configProviderProps = configProvider.configProviderProps;
exports.VsConfigProvider = index$8.VsConfigProvider;
exports.dialogEmits = dialog.dialogEmits;
exports.dialogProps = dialog.dialogProps;
exports.VsDialog = index$9.VsDialog;
exports.focusTrapEmits = focusTrap.focusTrapEmits;
exports.focusTrapProps = focusTrap.focusTrapProps;
exports.VsFocusTrap = index$a.VsFocusTrap;
exports.iconProps = icon.iconProps;
exports.arrowProps = arrow.arrowProps;
exports.checkProps = check.checkProps;
exports.closeProps = close.closeProps;
exports.plusProps = plus.plusProps;
exports.IconArrow = index$b.IconArrow;
exports.IconCheck = index$b.IconCheck;
exports.IconClose = index$b.IconClose;
exports.IconLoading = index$b.IconLoading;
exports.IconPlus = index$b.IconPlus;
exports.IconStar = index$b.IconStar;
exports.IconStarFilled = index$b.IconStarFilled;
exports.VsIcon = index$b.VsIcon;
exports.VsInfiniteScroll = index$c.VsInfiniteScroll;
exports.inputEmits = input.inputEmits;
exports.inputProps = input.inputProps;
exports.VsInput = index$d.VsInput;
exports.inputNumberEmits = inputNumber.inputNumberEmits;
exports.inputNumberProps = inputNumber.inputNumberProps;
exports.VsInputNumber = index$e.VsInputNumber;
exports.navbarItemProps = navbarItem.navbarItemProps;
exports.navbarEmits = navbar.navbarEmits;
exports.navbarProps = navbar.navbarProps;
exports.VsNavbar = index$f.VsNavbar;
exports.VsNavbarGroup = index$f.VsNavbarGroup;
exports.VsNavbarItem = index$f.VsNavbarItem;
exports.overlayEmits = overlay.overlayEmits;
exports.overlayProps = overlay.overlayProps;
exports.VsOverlay = index$g.VsOverlay;
exports.paginationEmits = pagination.paginationEmits;
exports.paginationProps = pagination.paginationProps;
exports.VsPagination = index$h.VsPagination;
exports.popconfirmEmits = popconfirm.popconfirmEmits;
exports.popconfirmProps = popconfirm.popconfirmProps;
exports.VsPopconfirm = index$i.VsPopconfirm;
exports.popperEmits = popper.popperEmits;
exports.popperProps = popper.popperProps;
exports.usePopperModelToggle = popper.usePopperModelToggle;
exports.usePopperModelToggleEmits = popper.usePopperModelToggleEmits;
exports.usePopperModelToggleProps = popper.usePopperModelToggleProps;
exports.popperTriggerProps = trigger.popperTriggerProps;
exports.popperContentEmits = content.popperContentEmits;
exports.popperContentProps = content.popperContentProps;
exports.VsPopper = index$j.VsPopper;
exports.radioEmits = radio.radioEmits;
exports.radioProps = radio.radioProps;
exports.VsRadio = index$k.VsRadio;
exports.rateEmits = rate.rateEmits;
exports.rateProps = rate.rateProps;
exports.VsRate = index$l.VsRate;
exports.RowAlign = row.RowAlign;
exports.RowDerection = row.RowDerection;
exports.RowJustify = row.RowJustify;
exports.rowProps = row.rowProps;
exports.VsRow = index$m.VsRow;
exports.BAR_MAP = util.BAR_MAP;
exports.GAP = util.GAP;
exports.renderThumbStyle = util.renderThumbStyle;
exports.scrollbarEmits = scrollbar.scrollbarEmits;
exports.scrollbarProps = scrollbar.scrollbarProps;
exports.thumbProps = thumb.thumbProps;
exports.VsScrollbar = index$n.VsScrollbar;
exports.optionGroupProps = optionGroup.optionGroupProps;
exports.optionProps = option.optionProps;
exports.selectEmits = select.selectEmits;
exports.selectProps = select.selectProps;
exports.VsOption = index$o.VsOption;
exports.VsOptionGroup = index$o.VsOptionGroup;
exports.VsSelect = index$o.VsSelect;
exports.sidebarGroupProps = sidebarGroup.sidebarGroupProps;
exports.sidebarItemProps = sidebarItem.sidebarItemProps;
exports.sidebarEmits = sidebar.sidebarEmits;
exports.sidebarProps = sidebar.sidebarProps;
exports.VsSidebar = index$p.VsSidebar;
exports.VsSidebarGroup = index$p.VsSidebarGroup;
exports.VsSidebarItem = index$p.VsSidebarItem;
exports.OnlyChild = onlyChild.OnlyChild;
exports.VsOnlyChild = onlyChild.OnlyChild;
exports.switchEmits = _switch.switchEmits;
exports.switchProps = _switch.switchProps;
exports.VsSwitch = index$q.VsSwitch;
exports.tableEmits = table.tableEmits;
exports.tableProps = table.tableProps;
exports.getPage = utils.getPage;
exports.sortData = utils.sortData;
exports.toggleSelectAll = utils.toggleSelectAll;
exports.VsTable = index$r.VsTable;
exports.VsTd = index$r.VsTd;
exports.VsTh = index$r.VsTh;
exports.VsTr = index$r.VsTr;
exports.timeSelectProps = timeSelect.timeSelectProps;
exports.VsTimeSelect = index$s.VsTimeSelect;
exports.tooltipProps = tooltip.tooltipProps;
exports.VsTooltip = index$t.VsTooltip;
exports.loadingProps = loading.loadingProps;
exports.loadingTypes = loading.loadingTypes;
exports.VsLoading = index$u.VsLoading;
exports.VsLoadingDirective = directive.vLoading;
exports.vLoading = directive.vLoading;
exports.VsLoadingFn = method.loading;
exports.notificationEmits = notification.notificationEmits;
exports.notificationPosition = notification.notificationPosition;
exports.notificationProps = notification.notificationProps;
exports.VsNotification = index$v.VsNotification;
exports.EVENT_CODE = aria.EVENT_CODE;
exports.componentColors = color.componentColors;
exports.hexFullRE = color.hexFullRE;
exports.hexShorthandRE = color.hexShorthandRE;
exports.leadingHashRE = color.leadingHashRE;
exports.rgbNumberRE = color.rgbNumberRE;
exports.rgbRE = color.rgbRE;
exports.vuesaxColors = color.vuesaxColors;
exports.defaultZIndex = cssProperties.defaultZIndex;
exports.CHANGE_EVENT = event.CHANGE_EVENT;
exports.INPUT_EVENT = event.INPUT_EVENT;
exports.UPDATE_MODEL_EVENT = event.UPDATE_MODEL_EVENT;
exports.INSTALLED_KEY = key.INSTALLED_KEY;
exports.LOADING_RECT = loading$1.LOADING_RECT;
exports.SCALE_PARENT = loading$1.SCALE_PARENT;
exports.placements = popper$1.placements;
exports.componentSizeMap = size.componentSizeMap;
exports.componentSizes = size.componentSizes;
exports.ClickOutside = index$w["default"];
exports.Loading = index$x["default"];
exports.Mousewheel = index$y["default"];
exports.RepeatClick = index$z.RepeatClick;
exports.TrapFocus = index$A["default"];
exports.useAttrs = index$B.useAttrs;
exports.useVuesaxBaseComponent = index$C.useVuesaxBaseComponent;
exports.useColor = index$D.useColor;
exports.useColorProp = index$D.useColorProp;
exports.useDisabled = index$D.useDisabled;
exports.useSize = index$D.useSize;
exports.useSizeProp = index$D.useSizeProp;
exports.useCursor = index$E.useCursor;
exports.useDelayedToggle = index$F.useDelayedToggle;
exports.useDelayedToggleProps = index$F.useDelayedToggleProps;
exports.useDeprecated = index$G.useDeprecated;
exports.useDraggable = index$H.useDraggable;
exports.useEscapeKeydown = index$I.useEscapeKeydown;
exports.arrow = arrow$1.arrow;
exports.useFloating = useFloating.useFloating;
exports.computePosition = index$J.computePosition;
exports.detectOverflow = detectOverflow.detectOverflow;
exports.flip = middleware.flip;
exports.limitShift = middleware.limitShift;
exports.shift = middleware.shift;
exports.offset = offset.offset;
exports.platform = platform.platform;
exports.useFocus = index$K.useFocus;
exports.FORWARD_REF_INJECTION_KEY = index$L.FORWARD_REF_INJECTION_KEY;
exports.useForwardRef = index$L.useForwardRef;
exports.useForwardRefDirective = index$L.useForwardRefDirective;
exports.provideGlobalConfig = index$M.provideGlobalConfig;
exports.useGlobalComponentSettings = index$M.useGlobalComponentSettings;
exports.useGlobalConfig = index$M.useGlobalConfig;
exports.useGroupInject = index$N.useGroupInject;
exports.useGroupProvide = index$O.useGroupProvide;
exports.ID_INJECTION_KEY = index$P.ID_INJECTION_KEY;
exports.useId = index$P.useId;
exports.useIdInjection = index$P.useIdInjection;
exports.useDelayedRender = index$Q.useDelayedRender;
exports.buildLocaleContext = index$R.buildLocaleContext;
exports.buildTranslator = index$R.buildTranslator;
exports.localeContextKey = index$R.localeContextKey;
exports.translate = index$R.translate;
exports.useLocale = index$R.useLocale;
exports.useLockscreen = index$S.useLockscreen;
exports.useModal = index$T.useModal;
exports.createModelToggleComposable = index$U.createModelToggleComposable;
exports.useModelToggle = index$U.useModelToggle;
exports.useModelToggleEmits = index$U.useModelToggleEmits;
exports.useModelToggleProps = index$U.useModelToggleProps;
exports.defaultNamespace = index$V.defaultNamespace;
exports.namespaceContextKey = index$V.namespaceContextKey;
exports.useGetDerivedNamespace = index$V.useGetDerivedNamespace;
exports.useNamespace = index$V.useNamespace;
exports.useOrderedChildren = index$W.useOrderedChildren;
exports.createContainer = index$X.createContainer;
exports.usePopperContainer = index$X.usePopperContainer;
exports.usePopperContainerId = index$X.usePopperContainerId;
exports.usePreventGlobal = index$Y.usePreventGlobal;
exports.useProp = index$Z.useProp;
exports.useRestoreActive = index$_.useRestoreActive;
exports.useSameTarget = index$$.useSameTarget;
exports.useTeleport = index$10.useTeleport;
exports.useThrottleRender = index$11.useThrottleRender;
exports.useTimeout = index$12.useTimeout;
exports.useTransitionFallthrough = index$13.useTransitionFallthrough;
exports.useTransitionFallthroughEmits = index$13.useTransitionFallthroughEmits;
exports.defaultInitialZIndex = index$14.defaultInitialZIndex;
exports.useZIndex = index$14.useZIndex;
exports.zIndexContextKey = index$14.zIndexContextKey;
exports.avatarGroupContextKey = avatar$1.avatarGroupContextKey;
exports.checkboxGroupContextKey = checkbox$1.checkboxGroupContextKey;
exports.configProviderContextKey = configProvider$1.configProviderContextKey;
exports.focusAfterReleased = focusTrap$1.focusAfterReleased;
exports.focusAfterTrapped = focusTrap$1.focusAfterTrapped;
exports.focusAfterTrappedOpts = focusTrap$1.focusAfterTrappedOpts;
exports.focusTrapInjectionKey = focusTrap$1.focusTrapInjectionKey;
exports.focusoutPrevented = focusTrap$1.focusoutPrevented;
exports.focusoutPreventedOpts = focusTrap$1.focusoutPreventedOpts;
exports.onReleaseFocusEvent = focusTrap$1.onReleaseFocusEvent;
exports.onTrapFocusEvent = focusTrap$1.onTrapFocusEvent;
exports.paginationContextKey = pagination$1.paginationContextKey;
exports.popperContentContextKey = popper$2.popperContentContextKey;
exports.popperContextKey = popper$2.popperContextKey;
exports.rowContextKey = row$1.rowContextKey;
exports.scrollbarContextKey = scrollbar$1.scrollbarContextKey;
exports.sidebarContextKey = sidebar$1.sidebarContextKey;
exports.tableContextKey = table$1.tableContextKey;
exports.install = install;
exports.version = version;
//# sourceMappingURL=index.js.map
