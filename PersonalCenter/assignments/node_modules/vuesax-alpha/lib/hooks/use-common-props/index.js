'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
require('../../utils/index.js');
require('../../constants/index.js');
var index = require('../use-prop/index.js');
var runtime = require('../../utils/vue/props/runtime.js');
var size = require('../../constants/size.js');
var color = require('../../constants/color.js');
var validator = require('../../utils/vue/validator.js');

const useSizeProp = runtime.buildProp({
  type: String,
  values: size.componentSizes,
  required: false
});
const useSize = (fallback, ignore = {}) => {
  const emptyRef = vue.ref(void 0);
  const size = ignore.prop ? emptyRef : index.useProp("size");
  return vue.computed(() => size.value || vue.unref(fallback) || "");
};
const useDisabled = (fallback) => {
  const disabled = index.useProp("disabled");
  return vue.computed(() => disabled.value || vue.unref(fallback) || false);
};
const useColorProp = runtime.buildProp({
  type: String,
  values: color.vuesaxColors,
  validator: validator.isValidComponentColor
});
const useColor = (fallback) => {
  const color = index.useProp("color");
  return vue.computed(() => color.value || vue.unref(fallback));
};

exports.useColor = useColor;
exports.useColorProp = useColorProp;
exports.useDisabled = useDisabled;
exports.useSize = useSize;
exports.useSizeProp = useSizeProp;
//# sourceMappingURL=index.js.map
