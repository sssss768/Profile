import { defineComponent, renderSlot } from 'vue';
import '../../../utils/index.mjs';
import '../../../hooks/index.mjs';
import { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';
import { provideGlobalConfig } from '../../../hooks/use-global-config/index.mjs';

const configProviderProps = buildProps({
  zIndex: {
    type: Number
  },
  namespace: {
    type: String,
    default: "vs"
  },
  color: {
    type: definePropType(Object)
  },
  locale: {
    type: definePropType(Object)
  }
});
const ConfigProvider = defineComponent({
  name: "VsConfigProvider",
  props: configProviderProps,
  setup(props, { slots }) {
    const config = provideGlobalConfig(props);
    return () => renderSlot(slots, "default", { config: config == null ? void 0 : config.value });
  }
});

export { configProviderProps, ConfigProvider as default };
//# sourceMappingURL=config-provider.mjs.map
