export declare const VsConfigProvider: import("vuesax-alpha/es/utils").SFCWithInstall<import("vue").DefineComponent<{
    readonly zIndex: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly namespace: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, unknown, unknown, "vs", boolean>;
    readonly color: {
        readonly type: import("vue").PropType<import("../..").ColorProviderContext>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly locale: {
        readonly type: import("vue").PropType<import("../../locale").Language>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly zIndex: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly namespace: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, unknown, unknown, "vs", boolean>;
    readonly color: {
        readonly type: import("vue").PropType<import("../..").ColorProviderContext>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly locale: {
        readonly type: import("vue").PropType<import("../../locale").Language>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
}>>, {
    readonly namespace: string;
}, {}>> & Record<string, any>;
export default VsConfigProvider;
export * from './src/config-provider';
