import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot, createVNode, Transition, withCtx, withDirectives, createElementVNode, normalizeStyle, toDisplayString, vShow } from 'vue';
import '../../../hooks/index.mjs';
import '../../../utils/index.mjs';
import { badgeProps } from './badge.mjs';
import _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';
import { useNamespace } from '../../../hooks/use-namespace/index.mjs';
import { isNumber } from '../../../utils/types.mjs';
import { addUnit } from '../../../utils/dom/style.mjs';

const _hoisted_1 = ["textContent"];
const __default__ = defineComponent({
  name: "VsBadge"
});
const _sfc_main = defineComponent({
  ...__default__,
  props: badgeProps,
  setup(__props, { expose: __expose }) {
    const props = __props;
    const ns = useNamespace("badge");
    const hidden = computed(() => {
      return props.hidden || props.value === 0 && !props.showZero;
    });
    const content = computed(() => {
      if (props.isDot)
        return "";
      if (isNumber(props.value) && isNumber(props.max)) {
        if (props.max < props.value) {
          return `${props.max}+`;
        }
        return `${props.value}`;
      }
      return `${props.value}`;
    });
    const style = computed(() => {
      var _a, _b, _c, _d, _e;
      return [
        {
          backgroundColor: props.color,
          marginRight: addUnit(-((_b = (_a = props.offset) == null ? void 0 : _a[0]) != null ? _b : 0)),
          marginTop: addUnit((_d = (_c = props.offset) == null ? void 0 : _c[1]) != null ? _d : 0)
        },
        (_e = props.badgeStyle) != null ? _e : {},
        { "--vs-badge-ripple-color": props.color || "" }
      ];
    });
    __expose({
      content
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass(unref(ns).b())
        },
        [
          renderSlot(_ctx.$slots, "default"),
          createVNode(Transition, {
            name: `${unref(ns).namespace.value}-zoom-in-center`,
            persisted: ""
          }, {
            default: withCtx(() => [
              withDirectives(createElementVNode("sup", {
                class: normalizeClass([
                  unref(ns).e("content"),
                  unref(ns).em("content", _ctx.type),
                  unref(ns).is("fixed", !!_ctx.$slots.default),
                  unref(ns).is("dot", _ctx.isDot),
                  unref(ns).is("process", _ctx.processing),
                  _ctx.badgeClass
                ]),
                style: normalizeStyle(style.value),
                textContent: toDisplayString(content.value)
              }, null, 14, _hoisted_1), [
                [vShow, !hidden.value && (content.value || _ctx.isDot)]
              ])
            ]),
            _: 1
          }, 8, ["name"])
        ],
        2
      );
    };
  }
});
var Badge = /* @__PURE__ */ _export_sfc(_sfc_main, [["__file", "/home/runner/work/vuesax-alpha/vuesax-alpha/packages/components/badge/src/badge.vue"]]);

export { Badge as default };
//# sourceMappingURL=badge2.mjs.map
