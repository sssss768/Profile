import type { ExtractPropTypes } from 'vue';
import type Bar from './bar.vue';
export declare const barProps: {
    readonly always: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, true, boolean>;
    readonly width: {
        readonly type: import("vue").PropType<string>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly height: {
        readonly type: import("vue").PropType<string>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly ratioX: import("vuesax-alpha/es/utils").VsPropFinalized<NumberConstructor, unknown, unknown, 1, boolean>;
    readonly ratioY: import("vuesax-alpha/es/utils").VsPropFinalized<NumberConstructor, unknown, unknown, 1, boolean>;
    readonly thickness: import("vuesax-alpha/es/utils").VsPropFinalized<readonly [NumberConstructor, StringConstructor], unknown, unknown, 6, boolean>;
};
export declare type BarProps = ExtractPropTypes<typeof barProps>;
export declare type BarInstance = InstanceType<typeof Bar>;
