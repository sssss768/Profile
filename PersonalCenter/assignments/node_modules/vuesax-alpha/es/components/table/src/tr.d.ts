import type { TableModelValueType } from './table';
import type { EmitFn } from 'vuesax-alpha/es/utils';
import type { ExtractPropTypes } from 'vue';
export declare const tableTrProps: {
    readonly color: {
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<StringConstructor, "primary" | "success" | "danger" | "warn" | "dark" | "text" | "light" | "secondary" | "facebook" | "twitter" | "youtube" | "pinterest" | "linkedin" | "snapchat" | "whatsapp" | "tumblr" | "reddit" | "spotify" | "amazon" | "medium" | "vimeo" | "skype" | "dribbble" | "slack" | "yahoo" | "twitch" | "discord" | "telegram" | "google-plus" | "messenger", import("../../..").Color>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly data: import("vuesax-alpha/es/utils").VsPropFinalized<(new (...args: any[]) => TableModelValueType & {}) | (() => TableModelValueType) | ((new (...args: any[]) => TableModelValueType & {}) | (() => TableModelValueType))[], unknown, unknown, null, boolean>;
    readonly isSelected: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, null, boolean>;
    readonly notClickSelected: {
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<BooleanConstructor, unknown, unknown>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    readonly openExpandOnlyTd: {
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<BooleanConstructor, unknown, unknown>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
};
export declare type TableTrProps = ExtractPropTypes<typeof tableTrProps>;
export declare const tableTrEmits: {
    click: (event: Event | MouseEvent) => boolean;
    selected: (value: TableModelValueType) => boolean;
};
export declare type TableTrEmits = typeof tableTrEmits;
export declare type TableTrEmitFn = EmitFn<TableTrEmits>;
