{"version":3,"file":"navbar.mjs","sources":["../../../../../../packages/components/navbar/src/navbar.ts"],"sourcesContent":["import { buildProps, isBoolean, isString } from '@vuesax-alpha/utils'\n\nimport { useColorProp } from '@vuesax-alpha/hooks'\nimport { UPDATE_MODEL_EVENT } from '@vuesax-alpha/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type Navbar from './navbar.vue'\n\nexport const navbarProps = buildProps({\n  modelValue: {\n    type: String,\n  },\n  /**\n   * @description Component color - Accept Vuesax's color, Hex, rgb\n   */\n  color: useColorProp,\n\n  /** @description Defines if the component is fixed on the screen. */\n  fixed: {\n    type: Boolean,\n  },\n\n  /** @description Add a shadow to the component. */\n  shadow: {\n    type: Boolean,\n  },\n\n  /** @description Add functionality to add shadow to component when scrollTop is more than 0. */\n  shadowScroll: {\n    type: Boolean,\n  },\n\n  /** @description Add the functionality to hide and show the component based on whether the scroll is lowered or raised.*/\n  hideScroll: {\n    type: Boolean,\n  },\n\n  /** @description Change the text color of items to white. */\n  textWhite: {\n    type: Boolean,\n  },\n\n  /** @description Change the border radius to 0 by making the component square. */\n  square: {\n    type: Boolean,\n  },\n\n  /** @description Determines if the component has padding and the user scrolling is removed making an effect. */\n  paddingScroll: {\n    type: Boolean,\n  },\n\n  /** @description Delete the active line in the component. */\n  notLine: {\n    type: Boolean,\n  },\n\n  /** @description Add the functionality that when the elements of this slot cannot be correctly they are visually removed. */\n  leftCollapsed: {\n    type: Boolean,\n  },\n\n  /** @description Add the functionality that when the elements of this slot cannot be correctly they are visually removed. */\n  centerCollapsed: {\n    type: Boolean,\n  },\n\n  /** @description Add the functionality that when the elements of this slot cannot be correctly they are visually removed. */\n  rightCollapsed: {\n    type: Boolean,\n  },\n\n  /** @description Determines the element to which the scroll event will be requested. */\n  targetScroll: {\n    type: String,\n  },\n} as const)\n\nexport type NavbarProps = ExtractPropTypes<typeof navbarProps>\n\nexport const navbarEmits = {\n  collapsed: (val: unknown): val is boolean => isBoolean(val),\n  [UPDATE_MODEL_EVENT]: (val: string): val is string => isString(val),\n}\n\nexport type NavbarEmits = typeof navbarEmits\n\nexport type NavbarInstance = InstanceType<typeof Navbar>\n"],"names":[],"mappings":";;;;;;;;;AAOO,MAAM,cAAc,UAAW,CAAA;AAAA,EACpC,UAAY,EAAA;AAAA,IACV,IAAM,EAAA,MAAA;AAAA,GACR;AAAA,EAIA,KAAO,EAAA,YAAA;AAAA,EAGP,KAAO,EAAA;AAAA,IACL,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,MAAQ,EAAA;AAAA,IACN,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,YAAc,EAAA;AAAA,IACZ,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,UAAY,EAAA;AAAA,IACV,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,SAAW,EAAA;AAAA,IACT,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,MAAQ,EAAA;AAAA,IACN,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,aAAe,EAAA;AAAA,IACb,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,OAAS,EAAA;AAAA,IACP,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,aAAe,EAAA;AAAA,IACb,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,eAAiB,EAAA;AAAA,IACf,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,cAAgB,EAAA;AAAA,IACd,IAAM,EAAA,OAAA;AAAA,GACR;AAAA,EAGA,YAAc,EAAA;AAAA,IACZ,IAAM,EAAA,MAAA;AAAA,GACR;AACF,CAAU,EAAA;AAIH,MAAM,WAAc,GAAA;AAAA,EACzB,SAAW,EAAA,CAAC,GAAiC,KAAA,SAAA,CAAU,GAAG,CAAA;AAAA,EAC1D,CAAC,kBAAA,GAAqB,CAAC,GAAA,KAA+B,SAAS,GAAG,CAAA;AACpE;;;;"}