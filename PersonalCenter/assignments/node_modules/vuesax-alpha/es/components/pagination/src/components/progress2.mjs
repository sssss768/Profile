import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, normalizeStyle } from 'vue';
import '../../../../hooks/index.mjs';
import { usePagination } from '../usePagination.mjs';
import _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';
import { useNamespace } from '../../../../hooks/use-namespace/index.mjs';

const _sfc_main = defineComponent({
  __name: "progress",
  setup(__props) {
    const { pageCount, currentPage } = usePagination();
    const ns = useNamespace("pagination");
    const progress = computed(() => currentPage.value * 100 / pageCount.value);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass(unref(ns).e("progress"))
        },
        [
          createElementVNode(
            "div",
            {
              class: "progress",
              style: normalizeStyle({ width: `${progress.value}%` })
            },
            null,
            4
          )
        ],
        2
      );
    };
  }
});
var PaginationProgress = /* @__PURE__ */ _export_sfc(_sfc_main, [["__file", "/home/runner/work/vuesax-alpha/vuesax-alpha/packages/components/pagination/src/components/progress.vue"]]);

export { PaginationProgress as default };
//# sourceMappingURL=progress2.mjs.map
