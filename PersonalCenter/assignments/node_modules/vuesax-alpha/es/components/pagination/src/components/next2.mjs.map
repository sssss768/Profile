{"version":3,"file":"next2.mjs","sources":["../../../../../../../packages/components/pagination/src/components/next.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\"\n    class=\"btn-next\"\n    :disabled=\"internalDisabled && !infinite\"\n    :aria-disabled=\"internalDisabled && !infinite\"\n  >\n    <span v-if=\"nextText\">{{ nextText }}</span>\n    <vs-icon v-else>\n      <component :is=\"nextIcon\" />\n    </vs-icon>\n  </button>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { VsIcon } from '@vuesax-alpha/components/icon'\nimport { usePagination } from '../usePagination'\nimport { paginationNextProps } from './next'\n\ndefineOptions({\n  name: 'VsPaginationNext',\n})\n\ndefineProps(paginationNextProps)\n\nconst { pageCount, disabled, currentPage, infinite } = usePagination()\n\nconst internalDisabled = computed(\n  () =>\n    disabled.value ||\n    currentPage.value === pageCount.value ||\n    pageCount.value === 0\n)\n</script>\n"],"names":[],"mappings":";;;;;;;;mCAoBc,CAAA;AAAA,EACZ,IAAM,EAAA,kBAAA;AACR,CAAA,CAAA,CAAA;;;;;AAIA,IAAA,MAAM,EAAE,SAAW,EAAA,QAAA,EAAU,WAAa,EAAA,QAAA,KAAa,aAAc,EAAA,CAAA;AAErE,IAAA,MAAM,gBAAmB,GAAA,QAAA;AAAA,MACvB,MACE,SAAS,KACT,IAAA,WAAA,CAAY,UAAU,SAAU,CAAA,KAAA,IAChC,UAAU,KAAU,KAAA,CAAA;AAAA,KACxB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}