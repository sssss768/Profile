import '../../../utils/index.mjs';
import '../../../hooks/index.mjs';
import { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';
import { isNumber, isStringNumber } from '../../../utils/types.mjs';
import { useColorProp } from '../../../hooks/use-common-props/index.mjs';

const loadingTypes = [
  "atom",
  "ball",
  "scale",
  "waves",
  "border",
  "points",
  "square",
  "circles",
  "corners",
  "default",
  "gradient",
  "rectangle",
  "square-rotate"
];
const loadingProps = buildProps({
  type: {
    type: definePropType(String),
    values: loadingTypes,
    default: "default"
  },
  text: { type: String },
  scale: {
    type: definePropType([String, Number]),
    validator: (scale) => isNumber(scale) || isStringNumber(scale),
    default: 1
  },
  color: useColorProp,
  target: {
    type: definePropType([String, Object])
  },
  opacity: {
    type: definePropType([String, Number]),
    validator: (scale) => isNumber(scale) || isStringNumber(scale),
    default: 0.6
  },
  percent: {
    type: definePropType([String, Number]),
    validator: (scale) => isNumber(scale) || isStringNumber(scale)
  },
  progress: {
    type: definePropType([String, Number]),
    validator: (progress) => isNumber(progress) || isStringNumber(progress)
  },
  background: useColorProp
});

export { loadingProps, loadingTypes };
//# sourceMappingURL=loading.mjs.map
