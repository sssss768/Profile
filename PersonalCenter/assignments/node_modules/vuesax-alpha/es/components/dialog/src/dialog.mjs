import '../../../constants/index.mjs';
import '../../../hooks/index.mjs';
import '../../../utils/index.mjs';
import { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';
import { useColorProp } from '../../../hooks/use-common-props/index.mjs';
import { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';
import { isBoolean } from '../../../utils/types.mjs';

const dialogProps = buildProps({
  modelValue: {
    type: Boolean,
    default: false
  },
  color: { ...useColorProp, default: "primary" },
  overlayBlur: {
    default: false,
    type: Boolean
  },
  beforeClose: {
    type: definePropType(Function)
  },
  loading: {
    default: false,
    type: Boolean
  },
  fullScreen: {
    default: false,
    type: Boolean
  },
  notClose: {
    default: false,
    type: Boolean
  },
  preventClose: {
    default: false,
    type: Boolean
  },
  notPadding: {
    default: false,
    type: Boolean
  },
  lockScroll: {
    default: false,
    type: Boolean
  },
  shape: {
    type: String,
    values: ["square", "rounded"],
    default: "rounded"
  },
  autoWidth: {
    default: false,
    type: Boolean
  },
  scroll: {
    default: false,
    type: Boolean
  },
  notCenter: {
    default: false,
    type: Boolean
  },
  width: {
    default: null,
    type: String
  },
  overflowHidden: Boolean,
  blur: Boolean
});
const dialogEmits = {
  open: () => true,
  opened: () => true,
  close: () => true,
  closed: () => true,
  [UPDATE_MODEL_EVENT]: (value) => isBoolean(value)
};

export { dialogEmits, dialogProps };
//# sourceMappingURL=dialog.mjs.map
