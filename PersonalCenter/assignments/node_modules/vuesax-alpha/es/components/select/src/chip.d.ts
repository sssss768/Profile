import type { EmitFn } from 'vuesax-alpha/es/utils';
import type { ExtractPropTypes } from 'vue';
import type Chip from './chip.vue';
export declare const chipProps: {
    disabled: {
        readonly type: import("vue").PropType<import("vuesax-alpha/es/utils").VsPropMergeType<BooleanConstructor, unknown, unknown>>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        __vsPropKey: true;
    };
    hit: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, boolean, boolean>;
    shape: import("vuesax-alpha/es/utils").VsPropFinalized<StringConstructor, "square", unknown, string, boolean>;
    showClose: import("vuesax-alpha/es/utils").VsPropFinalized<BooleanConstructor, unknown, unknown, boolean, boolean>;
};
export declare type ChipProps = ExtractPropTypes<typeof chipProps>;
export declare const chipEmits: {
    click: (e: Event | MouseEvent) => boolean;
    close: (e: Event | MouseEvent) => boolean;
};
export declare type ChipEmits = typeof chipEmits;
export declare type ChipEmitFn = EmitFn<ChipEmits>;
export declare type ChipInstance = InstanceType<typeof Chip>;
