import '../../../hooks/index.mjs';
import '../../../constants/index.mjs';
import '../../../utils/index.mjs';
import { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';
import { useColorProp } from '../../../hooks/use-common-props/index.mjs';
import { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';
import { isString, isArray } from '@vue/shared';
import { isNumber, isBoolean } from '../../../utils/types.mjs';

const checkboxProps = buildProps({
  color: useColorProp,
  modelValue: {
    type: definePropType([
      String,
      Number,
      Boolean,
      Object,
      Array
    ]),
    default: void 0
  },
  notValue: {
    type: definePropType([
      String,
      Number,
      Boolean,
      Object,
      Array
    ])
  },
  value: {
    type: definePropType([
      String,
      Number,
      Boolean,
      Object,
      Array
    ])
  },
  id: {
    type: String,
    default: null
  },
  indeterminate: {
    type: Boolean
  },
  checked: {
    type: Boolean
  },
  checkedForce: {
    type: Boolean
  },
  disabled: {
    type: Boolean
  },
  loading: {
    type: Boolean
  },
  label: {
    type: String
  },
  labelBefore: {
    type: Boolean
  },
  lineThrough: {
    type: Boolean
  },
  name: {
    type: String,
    default: void 0
  },
  min: {
    type: Number
  },
  max: {
    type: Number
  }
});
const checkboxEmits = {
  [UPDATE_MODEL_EVENT]: (val) => isString(val) || isNumber(val) || isBoolean(val) || isArray(val),
  change: (val) => isString(val) || isNumber(val) || isBoolean(val)
};

export { checkboxEmits, checkboxProps };
//# sourceMappingURL=checkbox.mjs.map
