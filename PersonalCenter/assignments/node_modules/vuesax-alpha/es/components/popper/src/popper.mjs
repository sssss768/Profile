import '../../../utils/index.mjs';
import '../../../hooks/index.mjs';
import { popperContentProps } from './content.mjs';
import { popperTriggerProps } from './trigger.mjs';
import { createModelToggleComposable } from '../../../hooks/use-model-toggle/index.mjs';
import { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';
import { useDelayedToggleProps } from '../../../hooks/use-delayed-toggle/index.mjs';

const {
  useModelToggleProps: usePopperModelToggleProps,
  useModelToggleEmits: usePopperModelToggleEmits,
  useModelToggle: usePopperModelToggle
} = createModelToggleComposable("visible");
const popperProps = buildProps({
  ...useDelayedToggleProps,
  ...popperContentProps,
  ...popperTriggerProps,
  ...usePopperModelToggleProps,
  processBeforeOpen: {
    type: definePropType(Function),
    default: () => true
  },
  processBeforeClose: {
    type: definePropType(Function),
    default: () => true
  },
  showArrow: {
    type: Boolean,
    default: true
  },
  loading: {
    type: Boolean
  }
});
const popperEmits = [
  ...usePopperModelToggleEmits,
  "before-show",
  "show",
  "before-hide",
  "hide"
];

export { popperEmits, popperProps, usePopperModelToggle, usePopperModelToggleEmits, usePopperModelToggleProps };
//# sourceMappingURL=popper.mjs.map
