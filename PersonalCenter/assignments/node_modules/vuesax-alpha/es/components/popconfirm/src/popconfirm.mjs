import { MessageQuestion } from '@vuesax-alpha/icons-vue';
import '../../../utils/index.mjs';
import '../../popper/index.mjs';
import '../../../hooks/index.mjs';
import '../../button/index.mjs';
import '../../tooltip/index.mjs';
import { buildProps } from '../../../utils/vue/props/runtime.mjs';
import { tooltipProps } from '../../tooltip/src/tooltip.mjs';
import { useColorProp } from '../../../hooks/use-common-props/index.mjs';
import { buttonTypes, buttonSizes } from '../../button/src/button.mjs';
import { iconPropType } from '../../../utils/vue/icon.mjs';
import { popperContentProps } from '../../popper/src/content.mjs';

const popconfirmProps = buildProps({
  animation: tooltipProps.animation,
  title: { type: String },
  confirmButtonText: { type: String },
  cancelButtonText: { type: String },
  confirmButtonColor: {
    ...useColorProp,
    default: "primary"
  },
  confirmButtonType: {
    type: String,
    values: buttonTypes,
    default: "flat"
  },
  confirmButtonSize: {
    type: String,
    values: buttonSizes,
    default: "small"
  },
  cancelButtonColor: {
    ...useColorProp,
    default: "text"
  },
  cancelButtonType: {
    type: String,
    values: buttonTypes,
    default: "transparent"
  },
  cancelButtonSize: {
    type: String,
    values: buttonSizes,
    default: "small"
  },
  icon: {
    type: iconPropType,
    default: () => MessageQuestion
  },
  iconColor: {
    type: String,
    default: "#f90"
  },
  hideIcon: {
    type: Boolean,
    default: false
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  teleported: popperContentProps.teleported,
  persistent: popperContentProps.persistent,
  width: {
    type: [String, Number],
    default: 200
  }
});
const popconfirmEmits = {
  confirm: (e) => e instanceof MouseEvent,
  cancel: (e) => e instanceof MouseEvent
};

export { popconfirmEmits, popconfirmProps };
//# sourceMappingURL=popconfirm.mjs.map
