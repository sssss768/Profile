import type { DetectOverflowOptions } from '../detect-overflow';
import type { Derivable, Middleware } from '../types';
import type { Placement } from '../../utils';
export declare type FlipOptions = Partial<DetectOverflowOptions & {
    /**
     * @default true
     */
    mainAxis: boolean;
    /**
     * @default true
     */
    crossAxis: boolean;
    /**
     * @default [oppositePlacement] (computed)
     */
    fallbackPlacements: Array<Placement>;
    /**
     * @default 'bestFit'
     */
    fallbackStrategy: 'bestFit' | 'initialPlacement';
    /**
     * @default 'none' (disallow fallback)
     */
    fallbackAxisSideDirection: 'none' | 'start' | 'end';
    /**
     * @default true
     */
    flipAlignment: boolean;
}>;
export declare const flip: (options?: FlipOptions | Derivable<FlipOptions>) => Middleware;
