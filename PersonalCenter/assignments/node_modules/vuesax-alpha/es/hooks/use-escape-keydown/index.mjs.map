{"version":3,"file":"index.mjs","sources":["../../../../../packages/hooks/use-escape-keydown/index.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted } from 'vue'\nimport { isClient } from '@vuesax-alpha/utils'\nimport { EVENT_CODE } from '@vuesax-alpha/constants'\n\nlet registeredEscapeHandlers: ((e: KeyboardEvent) => void)[] = []\n\nconst cachedHandler = (e: Event) => {\n  const event = e as KeyboardEvent\n  if (event.key === EVENT_CODE.esc) {\n    registeredEscapeHandlers.forEach((registeredHandler) =>\n      registeredHandler(event)\n    )\n  }\n}\n\nexport const useEscapeKeydown = (handler: (e: KeyboardEvent) => void) => {\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener('keydown', cachedHandler)\n    }\n    if (isClient) registeredEscapeHandlers.push(handler)\n  })\n\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(\n      (registeredHandler) => registeredHandler !== handler\n    )\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener('keydown', cachedHandler)\n    }\n  })\n}\n"],"names":[],"mappings":";;;;;;AAIA,IAAI,2BAA2D,EAAC,CAAA;AAEhE,MAAM,aAAA,GAAgB,CAAC,CAAa,KAAA;AAClC,EAAA,MAAM,KAAQ,GAAA,CAAA,CAAA;AACd,EAAI,IAAA,KAAA,CAAM,GAAQ,KAAA,UAAA,CAAW,GAAK,EAAA;AAChC,IAAyB,wBAAA,CAAA,OAAA;AAAA,MAAQ,CAAC,iBAChC,KAAA,iBAAA,CAAkB,KAAK,CAAA;AAAA,KACzB,CAAA;AAAA,GACF;AACF,CAAA,CAAA;AAEa,MAAA,gBAAA,GAAmB,CAAC,OAAwC,KAAA;AACvE,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,wBAAA,CAAyB,WAAW,CAAG,EAAA;AACzC,MAAS,QAAA,CAAA,gBAAA,CAAiB,WAAW,aAAa,CAAA,CAAA;AAAA,KACpD;AACA,IAAI,IAAA,QAAA;AAAU,MAAA,wBAAA,CAAyB,KAAK,OAAO,CAAA,CAAA;AAAA,GACpD,CAAA,CAAA;AAED,EAAA,eAAA,CAAgB,MAAM;AACpB,IAAA,wBAAA,GAA2B,wBAAyB,CAAA,MAAA;AAAA,MAClD,CAAC,sBAAsB,iBAAsB,KAAA,OAAA;AAAA,KAC/C,CAAA;AACA,IAAI,IAAA,wBAAA,CAAyB,WAAW,CAAG,EAAA;AACzC,MAAI,IAAA,QAAA;AAAU,QAAS,QAAA,CAAA,mBAAA,CAAoB,WAAW,aAAa,CAAA,CAAA;AAAA,KACrE;AAAA,GACD,CAAA,CAAA;AACH;;;;"}