/// <reference types="typed.js" />

import { App } from 'vue';
import { ComponentOptionsMixin } from 'vue';
import { DefineComponent } from 'vue';
import { ExtractPropTypes } from 'vue';
import { PublicProps } from 'vue';
import { TypedOptions } from 'typed.js';

declare type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

declare const _default: {
    install: (app: App) => void;
};
export default _default;

export { TypedOptions }

export declare const VueTypedJs: __VLS_WithTemplateSlots<DefineComponent<{
    strings: {
        type: ArrayConstructor;
        required: boolean;
        default: () => string[];
    };
    stringsElement: {
        type: StringConstructor;
        required: boolean;
        default: null;
    };
    typeSpeed: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    startDelay: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    backSpeed: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    smartBackspace: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    shuffle: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    backDelay: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    fadeOut: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    fadeOutClass: {
        type: StringConstructor;
        required: boolean;
        default: string;
    };
    fadeOutDelay: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    loopCount: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    showCursor: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    cursorChar: {
        type: StringConstructor;
        required: boolean;
        default: string;
    };
    autoInsertCss: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    attr: {
        type: StringConstructor;
        required: boolean;
        default: null;
    };
    bindInputFocusEvents: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    contentType: {
        type: StringConstructor;
        required: boolean;
        default: string;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    strings: {
        type: ArrayConstructor;
        required: boolean;
        default: () => string[];
    };
    stringsElement: {
        type: StringConstructor;
        required: boolean;
        default: null;
    };
    typeSpeed: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    startDelay: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    backSpeed: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    smartBackspace: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    shuffle: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    backDelay: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    fadeOut: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    fadeOutClass: {
        type: StringConstructor;
        required: boolean;
        default: string;
    };
    fadeOutDelay: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    loopCount: {
        type: NumberConstructor;
        required: boolean;
        default: number;
    };
    showCursor: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    cursorChar: {
        type: StringConstructor;
        required: boolean;
        default: string;
    };
    autoInsertCss: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    attr: {
        type: StringConstructor;
        required: boolean;
        default: null;
    };
    bindInputFocusEvents: {
        type: BooleanConstructor;
        required: boolean;
        default: boolean;
    };
    contentType: {
        type: StringConstructor;
        required: boolean;
        default: string;
    };
}>>, {
    strings: unknown[];
    stringsElement: string;
    typeSpeed: number;
    startDelay: number;
    backSpeed: number;
    smartBackspace: boolean;
    shuffle: boolean;
    backDelay: number;
    fadeOut: boolean;
    fadeOutClass: string;
    fadeOutDelay: number;
    loop: boolean;
    loopCount: number;
    showCursor: boolean;
    cursorChar: string;
    autoInsertCss: boolean;
    attr: string;
    bindInputFocusEvents: boolean;
    contentType: string;
}, {}>, {
    default?(_: {}): any;
}>;

export { }
